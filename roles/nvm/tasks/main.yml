---
- name: Install nvm
  ansible.builtin.git:
    repo: https://github.com/nvm-sh/nvm.git
    dest: ~/.nvm
    version: '{{ nvm_version }}'

- name: Add nvm to profile of the dev user
  ansible.builtin.lineinfile:
    line: "source ~/.nvm/nvm.sh"
    path: ~/.profile
    create: false

- name: Resolve the node version
  ansible.builtin.raw: "source ~/.nvm/nvm.sh && nvm version-remote {{ nvm_node_version }}"
  register: node_resolved_version_output
  failed_when: "'N/A' in  node_resolved_version_output.stdout"
  changed_when: false

- name: Set the resolved version
  ansible.builtin.set_fact:
    node_resolved_version: '{{ node_resolved_version_output.stdout_lines[0] }}'
    node_path: '~/.nvm/versions/node/{{ node_resolved_version_output.stdout_lines[0] }}/bin'

- name: Install nodejs
  ansible.builtin.shell:
    cmd: "source ~/.nvm/nvm.sh && nvm install {{ node_resolved_version }}"
    executable: /bin/bash
    creates: '{{ node_path }}/npm'

- name: Install yarn
  ansible.builtin.shell:
    cmd: 'source ~/.nvm/nvm.sh && npm install -g yarn'
    executable: /bin/bash
    creates: '{{ node_path }}/yarn'

- name: Cleanup if needed
  ansible.builtin.file:
    name: '{{ nvm_project_path }}'
    state: absent
  when: nvm_project_cleanup is defined and nvm_project_cleanup

- name: Clone the project
  ansible.builtin.git:
    repo: '{{ nvm_project_repository }}'
    dest: '{{ nvm_project_path }}'
    version: '{{ nvm_project_branch }}'

- name: Get patches
  ansible.builtin.get_url:
    url: '{{ item }}'
    dest: /tmp/
    owner: '{{ dev_user_name }}'
    group: '{{ dev_user_name }}'
    mode: u=rw,g=,o=
  loop: '{{ nvm_project_patches }}'
  when: nvm_project_patches is defined

- name: Apply patches
  ansible.builtin.raw: 'cd {{ nvm_project_path }} && git apply /tmp/{{ item | basename }}'
  changed_when: true
  loop: '{{ nvm_project_patches }}'
  when: nvm_project_patches is defined

- name: Apply snippets
  ansible.builtin.get_url:
    url: '{{ item.value }}'
    dest: '{{ item.key }}'
    owner: '{{ dev_user_name }}'
    group: '{{ dev_user_name }}'
    mode: u=rw,g=,o=
  with_dict: '{{ nvm_project_snippets }}'
  when: nvm_project_snippets is defined and nvm_project_snippets

- name: Build commands
  ansible.builtin.raw: "source ~/.nvm/nvm.sh && cd {{ nvm_project_path }} && {{ nvm_build_commands | join(' && ') }}"
  changed_when: true

