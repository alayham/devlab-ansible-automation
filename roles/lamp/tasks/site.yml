- name: Cleanup
  ansible.builtin.file:
    path: '{{ site.install_path }}'
    force: true
    state: absent
  vars:
    ansible_become: true

- name: Composer create project
  community.general.composer:
    command: create-project
    arguments: '{{ site.composer_project }} {{ site.install_path }} ~{{ site.project_version }}'
    working_dir: '~'
  when: site.composer_project is defined and site.composer_project
  register: composer_run

- name: Apply snippets
  ansible.builtin.get_url:
    url: '{{ snippet.value }}'
    dest: '{{ site.install_path }}/{{ snippet.key }}'
    owner: '{{ dev_user_name }}'
    group: '{{ dev_user_name }}'
    mode: u=rw,g=,o=
  with_dict: '{{ site.snippets }}'
  loop_control:
    loop_var: snippet
  when: snippets is defined and snippets

- name: Composer Install, in case snippets override composer.json
  community.general.composer:
    command: install
    arguments: ''
    working_dir: '{{ site.install_path }}'
    prefer_dist: true
  when: snippets is defined and snippets and composer_run is changed

- name: Install composer development packages
  community.general.composer:
    command: require
    arguments: ' --dev {{ site.composer_dev_packages | join(" ") }}'
    working_dir: '{{ site.install_path }}'
    prefer_dist: true
  when: site.composer_dev_packages is defined and site.composer_dev_packages

- name: Install composer packages
  community.general.composer:
    command: require
    arguments: '{{ site.composer_packages | join(" ") }}'
    working_dir: '{{ site.install_path }}'
    prefer_dist: true
  when: site.composer_packages is defined and site.composer_packages

- name: Execute shell commands
  ansible.builtin.raw: 'cd {{ site.install_path }} && {{ site.shell_commands | join(" && ") }}'
  changed_when: true
  when: site.shell_commands is defined and site.shell_commands

- name: Create phpinfo file
  ansible.builtin.copy:
    content: '<?php phpinfo(); ?>'
    dest: '{{ site.document_root }}/php.php'
    owner: '{{ dev_user_name }}'
    group: '{{ dev_user_name }}'
    mode: u=rw,g=r,o=r
